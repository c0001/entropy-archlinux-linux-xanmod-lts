# This is a basic workflow to help you get started with Actions

name: release-test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for
  # the master branch
  push:
    branches: [ entropy-main ]
    # Pattern matched against refs/tags
    tags:
      # more filte see
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#patterns-to-match-branches-and-tags
      - '*'

  pull_request:
    branches: [ entropy-main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  # gh-release permission needed
  contents: write

# A workflow run is made up of one or more jobs that can run
# sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as
    # part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Env (Top)
        run: |
          echo "TOP_BUILD_USER_ID=$(id -u)"       >> ${GITHUB_ENV}
          echo "TOP_BUILD_USER_GROUP_ID=$(id -g)" >> ${GITHUB_ENV}
          cat  .release-env.txt                   >> ${GITHUB_ENV}
          echo "TOP_BUILD_MAKE_TYPE=$(cat .release-make-type)" >> ${GITHUB_ENV}
          echo "RELEASE_DATE=$(date -u +'%Y%m%d%H%M%S')" >> ${GITHUB_ENV}
          echo "RELEASE_VERSION=$(cat .release-version)" >> ${GITHUB_ENV}
      - name: Set Env (Tag)
        run: |
          echo "RELEASE_TAGNAME=CI/branch/${{ github.ref_name }}/make/${{ env.TOP_BUILD_MAKE_TYPE }}/v${{ env.RELEASE_VERSION }}/${{ env.RELEASE_DATE }}" >> ${GITHUB_ENV}
      - name: Build docker image
        run: |
          sed -E -i -e "s|<<<<USERID>>>>|${{ env.TOP_BUILD_USER_ID }}|g" -e "s|<<<<GROUPID>>>>|${{ env.TOP_BUILD_USER_GROUP_ID }}|g" -e "s|<<<<USERNAME>>>>|${{ env.TOP_BUILD_USER_NAME }}|g" -e "s|<<<<GROUPNAME>>>>|${{ env.TOP_BUILD_USER_GROUP_NAME }}|g" -e "s|<<<<TOP_BUILD_MOUNT_PATH>>>>|${{ env.TOP_BUILD_MOUNT_PATH }}|g" ./Dockerfile
          sed -E -i -e "s|<<<<TOP_BUILD_MOUNT_PATH>>>>|${{ env.TOP_BUILD_MOUNT_PATH }}|g" ./ENTRYPOINT.sh
          docker build -t ${{ env.TOP_BUILD_DOCKER_IMAGE_TAG }} -f ./Dockerfile .
      - name: Build kernel
        run: |
          docker run -i -e __MAKE_TYPE__=${{ env.TOP_BUILD_MAKE_TYPE }} -v $PWD:${{ env.TOP_BUILD_MOUNT_PATH }} -w ${{ env.TOP_BUILD_MOUNT_PATH }} ${{ env.TOP_BUILD_DOCKER_IMAGE_TAG }}
      - name: "Create latest pre-release tag"
        uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: ${{ env.RELEASE_TAGNAME }}
          tag_exists_error: true
          no_verify_tag: false
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: "PreBuilt ${{ env.RELEASE_TAGNAME }}"
          tag_name: ${{ env.RELEASE_TAGNAME }}
          prerelease: true
          files: |
            dist/*.tar.xz

# Local Variables:
# tab-width: 2
# yaml-indent-offset: 2
# End:
